name: AI-Powered Reimbursement Workflow (Excel Filling)
description: AI extracts data from receipts, fills a standard Excel template, then RPA performs the two required uploads.
steps:
  - name: AI Processes Receipts and Fills Excel Template
    action: ai_fill_reimbursement_excel
    params:
      receipt_files: "{{ input.file_paths }}"
      excel_template_path: "/Users/guohongbin/projects/llmrpa/devdata/reimbursement_template.xlsx" # Path to your blank Excel template
    output_to: reimbursement_package

  - name: Log in to OA System
    action: browser_login_human_like
    params:
      url: https://oa.topprismdata.com/seeyon/main.do
      username_selector: '#login_username'
      password_selector: '#login_password1'
      submit_selector: '#submit_button'
      username: 'guohb@topprism.com'
      password: 'LJSJ@123456'

  - name: Click LJCW04-Travel Expense Reimbursement Form (opens new window)
    action: browser_click
    params:
      selector: a:text("LJCW04-差旅费报销单")
      opens_new_window: true

  - name: Wait for iframe to be visible
    action: browser_wait_for_selector
    params:
      selector: 'iframe#zwIframe'
  - name: Switch to iframe
    action: browser_switch_to_frame
    params:
      selector: 'iframe#zwIframe'

  - name: Type '出差' into 'Reason' input
    action: browser_fill
    params:
      selector: '#field0006_id input'
      value: "AI自动报销 - 总金额: {{ reimbursement_package.total_amount }}"

  - name: Click "导入数据" button
    action: browser_click
    params:
      selector: 'div[title="导入数据"]'

  - name: Switch back to main page to find dialog
    action: browser_switch_to_frame
    params:
      selector: '__main_page__'

  - name: Wait for the Layui Iframe to appear on the main page
    action: browser_wait_for_selector
    params:
      selector: 'iframe[id^="layui-layer-iframe"]'
      state: 'attached'

  - name: Switch to the newly appeared Layui Iframe
    action: browser_switch_to_frame
    params:
      selector: 'iframe[id^="layui-layer-iframe"]'

  - name: Wait for Layui Iframe content to load
    action: browser_wait_for_load_state
    params:
      state: 'networkidle'
      timeout: 30000

  - name: Click "选择文件" button to open upload dialog
    action: browser_click
    params:
      selector: 'button.choose-excel-btns__file:has-text("选择文件")'

  - name: Switch back to main page to find upload dialog
    action: browser_switch_to_frame
    params:
      selector: '__main_page__'

  - name: Wait for the file upload iframe to appear
    action: browser_wait_for_selector
    params:
      selector: 'iframe#layui-layer-iframe2'
      state: 'attached'

  - name: Switch to the file upload iframe
    action: browser_switch_to_frame
    params:
      selector: 'iframe#layui-layer-iframe2'

  - name: Wait for upload iframe content to load
    action: browser_wait_for_load_state
    params:
      state: 'networkidle'
      timeout: 30000

  - name: Wait for the file input to be visible inside Iframe2
    action: browser_wait_for_selector
    params:
      selector: 'input#file1'

  - name: Upload AI-Filled Excel File
    action: browser_upload_file
    params:
      selector: 'input#file1'
      file_path: "{{ reimbursement_package.filled_excel_path }}"

  - name: Wait for first "确定" button
    action: browser_wait_for_selector
    params:
      selector: 'a#b1'

  - name: Click first "确定" button
    action: browser_click
    params:
      selector: '#b1'

  - name: Wait for page to settle after confirm
    action: browser_wait_for_load_state
    params:
      state: 'networkidle'

  - name: Switch back to main page after upload confirmation
    action: browser_switch_to_frame
    params:
      selector: '__main_page__'

  - name: Click "下一步" button
    action: browser_click
    params:
      selector: '#layui-layer-btn-next'

  - name: Wait for second "确定" button to be visible
    action: browser_wait_for_selector
    params:
      selector: '#layui-layer-btn-sure'
      state: 'visible'
      timeout: 15000

  - name: Wait for second "确定" button
    action: browser_wait_for_selector
    params:
      selector: '#layui-layer-btn-sure'

  - name: Click second "确定" button
    action: browser_click
    params:
      selector: '#layui-layer-btn-sure'

  - name: Switch back to main page to reset context
    action: browser_switch_to_frame
    params:
      selector: '__main_page__'

  - name: Switch back to main iframe for attachment
    action: browser_switch_to_frame
    params:
      selector: 'iframe#zwIframe'

  - name: Loop to Upload All Original Receipts
    action: loop
    params:
      source_list: input.file_paths # Use the original input file paths for attachments
      loop_variable: current_receipt_path
      steps:
        - name: Click attachment icon
          action: browser_click
          params:
            selector: 'div.icon.CAP.cap-icon-fujian'

        - name: Switch back to main page to find attachment dialog
          action: browser_switch_to_frame
          params:
            selector: '__main_page__'

        - name: Wait for the attachment Layui Iframe to appear
          action: browser_wait_for_selector
          params:
            selector: 'iframe[id^="layui-layer-iframe"]'
            state: 'attached'

        - name: Switch to the attachment Layui Iframe
          action: browser_switch_to_frame
          params:
            selector: 'iframe[id^="layui-layer-iframe"]'

        - name: Upload Current Receipt File
          action: browser_upload_file
          params:
            selector: 'input#file1'
            file_path: "{{ current_receipt_path }}"

        - name: Click third "确定" button after attachment upload
          action: browser_click
          params:
            selector: '#b1'

        - name: Switch back to main page
          action: browser_switch_to_frame
          params:
            selector: '__main_page__'

        - name: Wait for any shade to disappear
          action: browser_wait_for_selector
          params:
            selector: 'div.layui-layer-shade'
            state: 'detached'
            timeout: 15000

  - name: Wait for page to be fully idle before saving
    action: browser_wait_for_load_state
    params:
      state: 'networkidle'
      timeout: 15000

  - name: Click "保存待发" button using JavaScript
    action: browser_js_click
    params:
      selector: '#saveDraft_a'